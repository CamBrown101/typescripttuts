{"version":3,"sources":["functions.ts"],"names":["sayHello","console","log","sayWord","word","otherStuff","_i","arguments","length","newName","newNameTwo","makeMargin","x","dog"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,IAAIA,WAAW,SAAXA,QAAW,GAAY;AACvBC,YAAQC,GAAR,CAAY,OAAZ;AACH,CAFD;AAGAF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIG,UAAU,SAAVA,OAAU,CAAUC,IAAV,EAAgB;AAC1B,QAAIA,SAAS,KAAK,CAAlB,EAAqB;AAAEA,eAAO,OAAP;AAAiB;AACxC,QAAIC,aAAa,EAAjB;AACA,SAAK,IAAIC,KAAK,CAAd,EAAiBA,KAAKC,UAAUC,MAAhC,EAAwCF,IAAxC,EAA8C;AAC1CD,mBAAWC,KAAK,CAAhB,IAAqBC,UAAUD,EAAV,CAArB;AACH;AACDL,YAAQC,GAAR,CAAYG,UAAZ;AACA,WAAOD,IAAP;AACH,CARD;AASAD,QAAQ,KAAR,EAAe,OAAf;AACA;AACA;AACA,IAAIM,UAAU,KAAd;AACAA,UAAU,OAAV;AACAA,UAAU,EAAV;AACAR,QAAQC,GAAR,CAAYO,OAAZ;AACA;AACA;AACA,IAAIC,aAAaD,OAAjB;AACAC,aAAa,EAAb;AACA;AACA,IAAIC,aAAa,SAAbA,UAAa,CAAUC,CAAV,EAAa;AAC1B,WAAO,aAAaA,CAAb,GAAiB,KAAxB;AACH,CAFD;AAGAD,WAAW,EAAX;AACAA,WAAW,OAAX;AACA;AACA;AACA;AACA,IAAIE,MAAM,OAAV;AACAA,MAAM,IAAN;AACAA,MAAM,OAAN;AACA","file":"functions.65d5fabd.map","sourceRoot":"..","sourcesContent":["//functions in TypeScript\nvar sayHello = function () {\n    console.log('hello');\n};\nsayHello();\n// ? for optional params\n// const sayWord = (word?: string): string => {\n//   console.log(word || 'hello');\n//   return word || 'hello';\n// };\n// sayWord();\n//default params\nvar sayWord = function (word) {\n    if (word === void 0) { word = 'Hello'; }\n    var otherStuff = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherStuff[_i - 1] = arguments[_i];\n    }\n    console.log(otherStuff);\n    return word;\n};\nsayWord('Cam', 'Scott');\n//Implicit types\n// Union types with |\nvar newName = 'Cam';\nnewName = 'Scott';\nnewName = 10;\nconsole.log(newName);\n//Infiring types from another variable\n//Gets type infornmation from initialization\nvar newNameTwo = newName;\nnewNameTwo = 10;\n//Union types with functions\nvar makeMargin = function (x) {\n    return \"margin: \" + x + \"px;\";\n};\nmakeMargin(10);\nmakeMargin('Scott');\n// makeMargin(false);\n//Null types\n//Can be string or undefined or null\nvar dog = 'Sammy';\ndog = null;\ndog = 'Lucie';\n//strict null check\n"]}